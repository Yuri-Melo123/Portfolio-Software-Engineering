
import tkinter as tk
from tkinter import messagebox, ttk
import requests

# Define a URL da API
API_URL = "http://127.0.0.1:5000/tarefas"

# Classe principal da aplicação
class TarefaApp:

    # Construtor da classe
    def __init__(self, root):
        self.root = root
        self.root.title("Gerenciador de Tarefas")
        self.root.geometry("600x400")

        self.tarefas = []

        self.frame_form = tk.Frame(self.root)
        self.frame_form.pack(pady=10)

        tk.Label(self.frame_form, text="Título").grid(row=0, column=0)
        tk.Label(self.frame_form, text="Descrição").grid(row=1, column=0)
        tk.Label(self.frame_form, text="Prioridade").grid(row=2, column=0)

        self.titulo = tk.Entry(self.frame_form, width=40)
        self.descricao = tk.Entry(self.frame_form, width=40)
        self.prioridade = ttk.Combobox(self.frame_form, values=["Baixa", "Média", "Alta"], width=37)

        self.titulo.grid(row=0, column=1)
        self.descricao.grid(row=1, column=1)
        self.prioridade.grid(row=2, column=1)

        self.btn_add = tk.Button(self.frame_form, text="Adicionar Tarefa", command=self.adicionar_tarefa)
        self.btn_add.grid(row=3, column=0, columnspan=2, pady=10)

        self.lista_tarefas = tk.Listbox(self.root, width=80)
        self.lista_tarefas.pack(pady=10)

        self.btn_atualizar = tk.Button(self.root, text="Atualizar Lista", command=self.listar_tarefas)
        self.btn_atualizar.pack()

        self.btn_excluir = tk.Button(self.root, text="Excluir Selecionada", command=self.excluir_tarefa)
        self.btn_excluir.pack(pady=5)

        self.listar_tarefas()

    # Método para adicionar uma nova tarefa
    def adicionar_tarefa(self):
        dados = {
            "titulo": self.titulo.get(),
            "descricao": self.descricao.get(),
            "prioridade": self.prioridade.get()
        }
        resposta = requests.post(API_URL, json=dados)
        if resposta.status_code == 201:
            messagebox.showinfo("Sucesso", "Tarefa adicionada!")
            self.titulo.delete(0, tk.END)
            self.descricao.delete(0, tk.END)
            self.prioridade.set("")
            self.listar_tarefas()
        else:
            messagebox.showerror("Erro", "Erro ao adicionar tarefa")

    # Método para listar as tarefas
    def listar_tarefas(self):
        self.lista_tarefas.delete(0, tk.END)
        resposta = requests.get(API_URL)
        if resposta.status_code == 200:
            self.tarefas = resposta.json()
            for i, tarefa in enumerate(self.tarefas):
                texto = f"{i}: {tarefa.get('titulo')} | {tarefa.get('descricao')} | Prioridade: {tarefa.get('prioridade')}"
                self.lista_tarefas.insert(tk.END, texto)

    # Método para excluir uma tarefa selecionada
    def excluir_tarefa(self):
        selecao = self.lista_tarefas.curselection()
        if selecao:
            index = selecao[0]
            resposta = requests.delete(f"{API_URL}/{index}")
            if resposta.status_code == 204:
                messagebox.showinfo("Sucesso", "Tarefa excluída!")
                self.listar_tarefas()
            else:
                messagebox.showerror("Erro", "Erro ao excluir tarefa")
        else:
            messagebox.showwarning("Aviso", "Nenhuma tarefa selecionada.")

# Execução da aplicação
if __name__ == "__main__":
    root = tk.Tk()
    app = TarefaApp(root)
    root.mainloop()
